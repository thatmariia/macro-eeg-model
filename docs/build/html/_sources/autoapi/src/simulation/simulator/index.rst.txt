src.simulation.simulator
========================

.. py:module:: src.simulation.simulator


Classes
-------

.. autoapisummary::

   src.simulation.simulator.Simulator


Module Contents
---------------

.. py:class:: Simulator(lag_connectivity_weights, sample_rate, nr_lags, nr_nodes, t_secs, t_burnit, noise_color, std_noise)

   The Simulator class is responsible for simulating EEG data using a vector autoregression (VAR) model.
   It generates synthetic EEG signals based on the provided lagged connectivity weights, noise characteristics,
   and other simulation parameters.

   .. attribute:: _lag_connectivity_weights

      The lagged connectivity weights matrix used for the VAR model.

      :type: numpy.ndarray

   .. attribute:: _sample_rate

      The sample rate of the simulation in Hz.

      :type: int

   .. attribute:: _nr_lags

      The number of lags (p) in the VAR(p) model.

      :type: int

   .. attribute:: _nr_nodes

      The number of nodes (channels) in the simulation.

      :type: int

   .. attribute:: _t_secs

      The total time of the simulation in seconds.

      :type: int

   .. attribute:: _t_burnit

      The burn-in time for the simulation in seconds.

      :type: int

   .. attribute:: _noise_color

      The color of the noise to be used in the simulation ('white' or 'pink').

      :type: str

   .. attribute:: _std_noise

      The standard deviation of the noise to be used in the simulation.

      :type: float


   .. py:method:: __init__(lag_connectivity_weights, sample_rate, nr_lags, nr_nodes, t_secs, t_burnit, noise_color, std_noise)

      Initializes the Simulator with the provided parameters.

      :param lag_connectivity_weights: The lagged connectivity weights matrix used for the VAR model.
      :type lag_connectivity_weights: numpy.ndarray
      :param sample_rate: The sample rate of the simulation in Hz.
      :type sample_rate: int
      :param nr_lags: The number of lags (p) in the VAR(p) model.
      :type nr_lags: int
      :param nr_nodes: The number of nodes (channels) in the simulation.
      :type nr_nodes: int
      :param t_secs: The total time of the simulation in seconds.
      :type t_secs: int
      :param t_burnit: The burn-in time for the simulation in seconds.
      :type t_burnit: int
      :param noise_color: The color of the noise to be used in the simulation ('white' or 'pink').
      :type noise_color: str
      :param std_noise: The standard deviation of the noise to be used in the simulation.
      :type std_noise: float



   .. py:method:: simulate(verbose=False)

      The simulation generates synthetic EEG signals by applying the VAR model to the provided
      lagged connectivity weights and adding noise.

      :param verbose: If True, displays a progress bar during the simulation (default is False).
      :type verbose: bool, optional

      :returns: A 2D array of shape (samples, nodes) containing the simulated EEG data.
      :rtype: numpy.ndarray

      :raises ValueError: If an invalid noise color is provided.
      :raises AssertionError: If any of the input parameters are invalid (e.g., non-positive values for number of lags, time, or std).



